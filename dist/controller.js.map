{"version":3,"file":"controller.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACljFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://playground-chromeextension/./src/contentScript/bottomTranscriptView.css","webpack://playground-chromeextension/./src/contentScript/sidebarTranscriptView.css","webpack://playground-chromeextension/./node_modules/css-loader/dist/runtime/api.js","webpack://playground-chromeextension/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://playground-chromeextension/./src/contentScript/bottomTranscriptView.css?6e41","webpack://playground-chromeextension/./src/contentScript/sidebarTranscriptView.css?4b33","webpack://playground-chromeextension/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://playground-chromeextension/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://playground-chromeextension/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://playground-chromeextension/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://playground-chromeextension/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://playground-chromeextension/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://playground-chromeextension/./src/contentScript/bottomTranscriptView.ts","webpack://playground-chromeextension/./src/contentScript/sidebarTranscriptView.ts","webpack://playground-chromeextension/./src/utils/MutationObserver_.ts","webpack://playground-chromeextension/./src/utils/Observable.ts","webpack://playground-chromeextension/./src/utils/constants.ts","webpack://playground-chromeextension/./src/utils/contentScript/State.ts","webpack://playground-chromeextension/./src/utils/selectors.ts","webpack://playground-chromeextension/webpack/bootstrap","webpack://playground-chromeextension/webpack/runtime/compat get default export","webpack://playground-chromeextension/webpack/runtime/define property getters","webpack://playground-chromeextension/webpack/runtime/hasOwnProperty shorthand","webpack://playground-chromeextension/webpack/runtime/make namespace object","webpack://playground-chromeextension/./src/contentScript/controller.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* これがどこに配置されるのか確認しないと... */\\r\\n.ex--dashboard-transcript-wrapper {\\r\\n    z-index: 3;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--header {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    padding: 0.8rem 0.8rem 0.8rem 1.6rem;\\r\\n    border: 1 px solid orange;\\r\\n    /* background-color: #fff; */\\r\\n\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n\\r\\n    box-shadow: 0 0 1px 1px rgb(28 29 31 / 10%), 0 3px 1px 0 rgb(28 29 31 / 10%);\\r\\n    margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--transcript-panel {\\r\\n    max-height: 300px;\\r\\n    overflow-y: auto;\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--autoscroll-wrapper {\\r\\n    padding: 8px 16px;\\r\\n    border-left: 1px solid orange;\\r\\n    border-right: 1px solid orange;\\r\\n    /* background: #f7f9fa; */\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--cue-container {\\r\\n    padding: 4px 4px;\\r\\n    margin: 1px;\\r\\n}\\r\\n\\r\\n.--highlight-- {\\r\\n    background-color: #fff;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/contentScript/bottomTranscriptView.css\"],\"names\":[],\"mappings\":\"AAAA,2BAA2B;AAC3B;IACI,UAAU;IACV,kBAAkB;IAClB,MAAM;IACN,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,oCAAoC;IACpC,yBAAyB;IACzB,4BAA4B;;IAE5B,QAAQ;IACR,qBAAqB;;IAErB,4EAA4E;IAC5E,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,QAAQ;IACR,qBAAqB;AACzB;;AAEA;IACI,iBAAiB;IACjB,6BAA6B;IAC7B,8BAA8B;IAC9B,yBAAyB;IACzB,QAAQ;IACR,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,sBAAsB;AAC1B\",\"sourcesContent\":[\"/* これがどこに配置されるのか確認しないと... */\\r\\n.ex--dashboard-transcript-wrapper {\\r\\n    z-index: 3;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--header {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    padding: 0.8rem 0.8rem 0.8rem 1.6rem;\\r\\n    border: 1 px solid orange;\\r\\n    /* background-color: #fff; */\\r\\n\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n\\r\\n    box-shadow: 0 0 1px 1px rgb(28 29 31 / 10%), 0 3px 1px 0 rgb(28 29 31 / 10%);\\r\\n    margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--transcript-panel {\\r\\n    max-height: 300px;\\r\\n    overflow-y: auto;\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--autoscroll-wrapper {\\r\\n    padding: 8px 16px;\\r\\n    border-left: 1px solid orange;\\r\\n    border-right: 1px solid orange;\\r\\n    /* background: #f7f9fa; */\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--dashboard-transcript--cue-container {\\r\\n    padding: 4px 4px;\\r\\n    margin: 1px;\\r\\n}\\r\\n\\r\\n.--highlight-- {\\r\\n    background-color: #fff;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ex--sidebar-column {\\r\\n    position: fixed;\\r\\n    right: 0;\\r\\n    /* \\r\\n      975px < window.innerWidth =< 1182px でwidth: 300px\\r\\n      window.innerWidth > 1182pxでwidth: 25%;\\r\\n      なのでセレクタを追加したほうがいいかも\\r\\n      */\\r\\n    /* width: 25%; */\\r\\n    /* top: specified by JavaScript */\\r\\n    /* 重ね合わせコンテキストがあったら埋もれないようにひとまず2にした */\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n.ex--sidebar--wideview {\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.ex--sidebar--middleview {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.ex--sidebar--sidebar {\\r\\n}\\r\\n\\r\\n.ex--sidebar--sidebar-header {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    padding: 0.8rem 0.8rem 0.8rem 1.6rem;\\r\\n    border: 1px solid #d1d7dc;\\r\\n    border-right: 0;\\r\\n    /* background-color: #fff; */\\r\\n\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--sidebar--content {\\r\\n    z-index: 1;\\r\\n    background-color: #fff;\\r\\n    border: 1px solid #f7f9fa;\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: auto;\\r\\n    /* height:  */\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--sidebar-transcript--autoscroll-wrapper {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n\\r\\n    padding: 8px 16px;\\r\\n    border-left: 1px solid #f7f9fa;\\r\\n    border-right: 1px solid #f7f9fa;\\r\\n    background: #f7f9fa;\\r\\n\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/contentScript/sidebarTranscriptView.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,eAAe;IACf,QAAQ;IACR;;;;OAIG;IACH,gBAAgB;IAChB,iCAAiC;IACjC,qCAAqC;IACrC,UAAU;AACd;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;AACA;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,oCAAoC;IACpC,yBAAyB;IACzB,eAAe;IACf,4BAA4B;;IAE5B,QAAQ;IACR,qBAAqB;AACzB;;AAEA;IACI,UAAU;IACV,sBAAsB;IACtB,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,QAAQ;IACR,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,SAAS;IACT,WAAW;;IAEX,iBAAiB;IACjB,8BAA8B;IAC9B,+BAA+B;IAC/B,mBAAmB;;IAEnB,QAAQ;IACR,qBAAqB;AACzB\",\"sourcesContent\":[\".ex--sidebar-column {\\r\\n    position: fixed;\\r\\n    right: 0;\\r\\n    /* \\r\\n      975px < window.innerWidth =< 1182px でwidth: 300px\\r\\n      window.innerWidth > 1182pxでwidth: 25%;\\r\\n      なのでセレクタを追加したほうがいいかも\\r\\n      */\\r\\n    /* width: 25%; */\\r\\n    /* top: specified by JavaScript */\\r\\n    /* 重ね合わせコンテキストがあったら埋もれないようにひとまず2にした */\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n.ex--sidebar--wideview {\\r\\n    width: 25%;\\r\\n}\\r\\n\\r\\n.ex--sidebar--middleview {\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.ex--sidebar--sidebar {\\r\\n}\\r\\n\\r\\n.ex--sidebar--sidebar-header {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    padding: 0.8rem 0.8rem 0.8rem 1.6rem;\\r\\n    border: 1px solid #d1d7dc;\\r\\n    border-right: 0;\\r\\n    /* background-color: #fff; */\\r\\n\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--sidebar--content {\\r\\n    z-index: 1;\\r\\n    background-color: #fff;\\r\\n    border: 1px solid #f7f9fa;\\r\\n    overflow-x: hidden;\\r\\n    overflow-y: auto;\\r\\n    /* height:  */\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.ex--sidebar-transcript--autoscroll-wrapper {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n\\r\\n    padding: 8px 16px;\\r\\n    border-left: 1px solid #f7f9fa;\\r\\n    border-right: 1px solid #f7f9fa;\\r\\n    background: #f7f9fa;\\r\\n\\r\\n    /* dev */\\r\\n    background-color: red;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./bottomTranscriptView.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./bottomTranscriptView.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./sidebarTranscriptView.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./sidebarTranscriptView.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","import * as selectors from \"../utils/selectors\";\r\nimport \"./bottomTranscriptView.css\";\r\nconst BottomTranscriptView = function () {\r\n    // insert position for Element.insertAdjaccentHTML()\r\n    this.insertPosition = \"afterbegin\";\r\n    this.insertParentSelector = selectors.EX.noSidebarParent;\r\n    this.transcriptSelectors = [\r\n        selectors.EX.dashboardTranscriptWrapper,\r\n        selectors.EX.dashboardTranscriptHeader,\r\n        selectors.EX.dashboardTranscriptPanel,\r\n        selectors.EX.dashboardTranscriptBottom,\r\n    ];\r\n};\r\n/*\r\n.ex--dashboard-transcript--cue-container\r\n.ex--dashboard-transcript--cue--underline\r\nspan[data-purpose=\"ex--dashboard-cue-text\"]\r\n\r\n*/\r\nBottomTranscriptView.prototype.generateSubtitleMarkup = function (subtitles) {\r\n    var mu = \"\";\r\n    for (const s of subtitles) {\r\n        const _mu = `\r\n        <div class=\"${selectors.EX.dashboardTranscriptCueContainer.slice(1)}\" data-id=\"${s.index}\">\r\n            <p data-purpose=\"ex-transcript-cue\" class=\"${selectors.EX.dashboardTranscriptCue.slice(1)}\">\r\n                <span data-purpose=\"ex--dashboard-cue-text\">\r\n                    ${s.subtitle}\r\n                </span>\r\n            </p>\r\n        </div>\r\n    `;\r\n        // concatでいいのかな...\r\n        mu = mu.concat(_mu);\r\n    }\r\n    return mu;\r\n};\r\nBottomTranscriptView.prototype.generateMarkup = function (subtitleStrings) {\r\n    return `\r\n    <div class=\"${selectors.EX.dashboardTranscriptWrapper.slice(1)}\">\r\n        <div class=\"${selectors.EX.dashboardTranscriptHeader.slice(1)}\">ExTranscript</div>\r\n        <div class=\"${selectors.EX.dashboardTranscriptPanel.slice(1)}\">\r\n            ${subtitleStrings}\r\n        </div>\r\n        <div class=\"${selectors.EX.dashboardTranscriptBottom.slice(1)}\">Auto Scroll</div>\r\n    </div>\r\n    `;\r\n};\r\n// BottomTranscriptView.prototype.render = function (): void {\r\n//   console.log(\"[BottomTranscriptView]render\");\r\n//   //   親要素を`position: relative`にする\r\n//   const e: HTMLElement = document.querySelector<HTMLElement>(\r\n//     this.insertParentSelector\r\n//   );\r\n//   e.style.position = \"relative\";\r\n//   const p: InsertPosition = this.insertPosition;\r\n//   const html: string = this.generateMarkup();\r\n//   e.insertAdjacentHTML(p, html);\r\n// };\r\nBottomTranscriptView.prototype.render = function (subtitles) {\r\n    //   親要素を`position: relative`にする\r\n    const e = document.querySelector(this.insertParentSelector);\r\n    e.style.position = \"relative\";\r\n    const p = this.insertPosition;\r\n    var html = \"\";\r\n    if (subtitles.length > 0) {\r\n        const s = this.generateSubtitleMarkup(subtitles);\r\n        html = this.generateMarkup(s);\r\n    }\r\n    else {\r\n        html = this.generateMarkup();\r\n    }\r\n    e.insertAdjacentHTML(p, html);\r\n};\r\n// Udemyページのコンテンツを間違っても消してしまわないように\r\nBottomTranscriptView.prototype.clear = function () {\r\n    this.transcriptSelectors.forEach((s) => {\r\n        const e = document.querySelector(s);\r\n        if (e)\r\n            e.remove();\r\n    });\r\n    //   親要素につけていた`position: relative`を解除する\r\n    const parent = document.querySelector(this.insertParentSelector);\r\n    parent.style.position = \"\";\r\n};\r\nBottomTranscriptView.prototype.renderSpinner = function () {\r\n    console.log(\"[BottomTranscriptView] render spinner\");\r\n};\r\nBottomTranscriptView.prototype.renderError = function () {\r\n    console.log(\"[BottomTranscriptView] render error\");\r\n};\r\nBottomTranscriptView.prototype.renderMessage = function () {\r\n    console.log(\"[BottomTranscriptView] render message\");\r\n};\r\nexport default new BottomTranscriptView();\r\n/*\r\n */\r\n","import * as selectors from \"../utils/selectors\";\r\nimport { SIGNAL } from \"../utils/constants\";\r\nimport \"./sidebarTranscriptView.css\";\r\nconst SidebarTranscriptView = function () {\r\n    // insert position for Element.insertAdjaccentHTML()\r\n    this.insertPosition = \"afterbegin\";\r\n    this.insertParentSelector = selectors.EX.sidebarParent;\r\n    this.transcriptSelectors = [selectors.EX.sidebarWrapper];\r\n};\r\nSidebarTranscriptView.prototype.generateMarkup = function (subtitles) {\r\n    const s = subtitles ? subtitles : \"\";\r\n    return `\r\n          <div class=\"${selectors.EX.sidebarWrapper.slice(1)}\">\r\n              <section class=\"${selectors.EX.sidebarSection.slice(1)}\">\r\n                  <div class=\"${selectors.EX.sidebarHeader.slice(1)}\">ExTranscript</div>\r\n                  <div class=\"${selectors.EX.sidebarContent.slice(1)}\">\r\n                    <div class=\"${selectors.EX.sidebarContentPanel.slice(1)}\">\r\n                      ${s}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"${selectors.EX.sidebarFooter.slice(1)}\">Auto Scroll</div>\r\n              </section>\r\n          </div>\r\n      `;\r\n};\r\nSidebarTranscriptView.prototype.generateSubtitleMarkup = function (subtitles) {\r\n    var mu = \"\";\r\n    for (const s of subtitles) {\r\n        const _mu = `\r\n        <div class=\"nothingYet\" data-id=\"${s.index}\">\r\n          <p class=\"nothingYet\">\r\n            <span data-purpose=\"nothingYet\">${s.subtitle}</span>\r\n          </p>\r\n        </div>\r\n      `;\r\n        // concatでいいのかな...\r\n        mu = mu.concat(_mu);\r\n    }\r\n    return mu;\r\n};\r\n// render\r\n//\r\n// 変更点\r\n// - 引数 subtitle を追加\r\n// - subtitles の中身の有無でgenerateMarkupの呼出を条件分岐させる\r\n//\r\n// これでsubtitleがあってもなくても両方の場合に対応できる\r\nSidebarTranscriptView.prototype.render = function (subtitles) {\r\n    const e = document.querySelector(this.insertParentSelector);\r\n    const p = this.insertPosition;\r\n    var html = \"\";\r\n    if (subtitles.length > 0) {\r\n        const s = this.generateSubtitleMarkup(subtitles);\r\n        html = this.generateMarkup(s);\r\n    }\r\n    else {\r\n        html = this.generateMarkup();\r\n    }\r\n    e.insertAdjacentHTML(p, html);\r\n};\r\nSidebarTranscriptView.prototype.clear = function () {\r\n    this.transcriptSelectors.forEach((s) => {\r\n        const e = document.querySelector(s);\r\n        if (e)\r\n            e.remove();\r\n    });\r\n};\r\n//\r\nSidebarTranscriptView.prototype.updateContentTop = function (top) {\r\n    const wrapper = document.querySelector(selectors.EX.sidebarWrapper);\r\n    wrapper.style.top = top + \"px\";\r\n};\r\nSidebarTranscriptView.prototype.updateContentHeight = function () {\r\n    const content = document.querySelector(selectors.EX.sidebarContent);\r\n    const footer = document.querySelector(selectors.EX.sidebarFooter);\r\n    const header = document.querySelector(selectors.EX.sidebarHeader);\r\n    const height = document.documentElement.clientHeight -\r\n        parseInt(window.getComputedStyle(footer).height.replace(\"px\", \"\")) -\r\n        parseInt(window.getComputedStyle(header).height.replace(\"px\", \"\"));\r\n    content.style.height = height + \"px\";\r\n};\r\nSidebarTranscriptView.prototype.updateWidth = function (signal) {\r\n    console.log(\"[SidebarTranscriptView] updateWidth\");\r\n    const wrapper = document.querySelector(selectors.EX.sidebarWrapper);\r\n    // toggle class\r\n    // 以下の処理より\r\n    // cssの重ね掛けのときにあとづけのselectorのほうが優先されるという特性があるなら\r\n    // もっとシンプルになるんだけれど\r\n    if (signal === SIGNAL.widthStatus.wideview) {\r\n        wrapper.classList.remove(selectors.EX.middleView.slice(1));\r\n        wrapper.classList.add(selectors.EX.wideView.slice(1));\r\n    }\r\n    else {\r\n        wrapper.classList.remove(selectors.EX.wideView.slice(1));\r\n        wrapper.classList.add(selectors.EX.middleView.slice(1));\r\n    }\r\n};\r\nSidebarTranscriptView.prototype.renderSpinner = function () {\r\n    console.log(\"[SidebarTranscriptView] render spinner\");\r\n};\r\nSidebarTranscriptView.prototype.renderError = function () {\r\n    console.log(\"[SidebarTranscriptView] render error\");\r\n};\r\nSidebarTranscriptView.prototype.renderMessage = function () {\r\n    console.log(\"[SidebarTranscriptView] render message\");\r\n};\r\nexport default new SidebarTranscriptView();\r\n// ------ LEGACY CODE ---------------------------------------\r\n// SidebarTranscriptView.prototype.generateMarkup = function (): string {\r\n//   return `\r\n//         <div class=\"${SELECTORS.EX.sidebarWrapper.slice(1)}\">\r\n//             <section class=\"${SELECTORS.EX.sidebarSection.slice(1)}\">\r\n//                 <div class=\"${SELECTORS.EX.sidebarHeader.slice(\r\n//                   1\r\n//                 )}\">ExTranscript</div>\r\n//                 <div class=\"${SELECTORS.EX.sidebarContent.slice(1)}\">\r\n//                     <p>\r\n//                     </p>\r\n//                 </div>\r\n//                 <div class=\"${SELECTORS.EX.sidebarFooter.slice(\r\n//                   1\r\n//                 )}\">Auto Scroll</div>\r\n//             </section>\r\n//         </div>\r\n//     `;\r\n// };\r\n// SidebarTranscriptView.prototype.render = function (): void {\r\n//   console.log(\"[SidebarTranscriptView] render\");\r\n//   const e: Element = document.querySelector(this.insertParentSelector);\r\n//   const p: InsertPosition = this.insertPosition;\r\n//   const html: string = this.generateMarkup();\r\n//   e.insertAdjacentHTML(p, html);\r\n// };\r\n","/**************************************************\r\n * MutationObserver wrapper class\r\n *\r\n * NOTE: targetはNodeListOf<Element>だけで全く再利用性がない\r\n *\r\n * いまのところsrc/contentScript/controller.tsでしか使われていない\r\n * *************************************************/\r\nclass MutationObserver_ {\r\n    constructor(callback, config, target) {\r\n        this._callback = callback;\r\n        this._config = config;\r\n        this._target = target;\r\n        this._observer = new MutationObserver(this._callback);\r\n    }\r\n    observe() {\r\n        this._target.forEach((ts) => {\r\n            this._observer.observe(ts, this._config);\r\n        });\r\n    }\r\n    disconnect() {\r\n        this._observer.disconnect();\r\n    }\r\n}\r\nexport default MutationObserver_;\r\n","class Observable {\r\n    constructor() {\r\n        this._observers = [];\r\n    }\r\n    register(func) {\r\n        this._observers.push(func);\r\n    }\r\n    unregister(func) {\r\n        this._observers = this._observers.filter((o) => {\r\n            return o !== func;\r\n        });\r\n    }\r\n    notify(prop, prev) {\r\n        this._observers.forEach((o) => {\r\n            o(prop, prev);\r\n        });\r\n    }\r\n}\r\nexport default Observable;\r\n","/**************************************************\r\n * constants\r\n * ________________________________________________\r\n *\r\n * ************************************************/\r\nexport const _key_of_model_state__ = '_key_of_model_state__@&%8=8';\r\nexport const urlPattern = /https:\\/\\/www.udemy.com\\/course\\/*/gm;\r\nexport const extensionStatus = {\r\n    working: 'working',\r\n    notWorking: 'notWorking',\r\n    idle: 'idle',\r\n};\r\nexport const extensionNames = {\r\n    popup: 'popup',\r\n    contentScript: 'contentScript',\r\n    controller: 'controller',\r\n    captureSubtitle: 'captureSubtitle',\r\n    background: 'background',\r\n};\r\n//\r\n// Updated\r\n//\r\nexport const orderNames = {\r\n    // // Inject content script order\r\n    // injectCaptureSubtitleScript: 'injectCaptureSubtitleScript',\r\n    // injectExTranscriptScript: 'injectExTranscriptScript',\r\n    // From background to contentScript\r\n    sendStatus: 'sendStatus',\r\n    // from controller to background\r\n    sendSubtitles: 'sendSubtitles',\r\n    // order to disconnect port\r\n    disconnect: 'disconnect',\r\n    // from popup inquire the url is correct\r\n    inquireUrl: 'inquireUrl',\r\n    // from popup, run process\r\n    run: 'run',\r\n    // reset content script\r\n    reset: 'reset',\r\n    // Turn Off ExTranscript\r\n    turnOff: 'turnOff',\r\n    // something succeeded\r\n    success: 'success',\r\n};\r\n// --- constants for controller.js -------------------------------\r\n// // To pass to setTimeout\r\n// export const TEN_SEC: number = 10000;\r\n// transcript要素はwinodwサイズが975px以下の時にdashboardへ以上でsidebarへ移動する\r\nexport const RESIZE_BOUNDARY = 975;\r\n// sidebarのwidthは2通りあって、\r\n// 975px < w =< 1182pxだと300px, w > 1182pxで25%\r\nexport const SIDEBAR_WIDTH_BOUNDARY = 1182;\r\n// window onResize時の反応遅延速度\r\nexport const RESIZE_TIMER = 100;\r\nexport const SIGNAL = {\r\n    widthStatus: {\r\n        wideview: true,\r\n        middleview: false,\r\n    },\r\n};\r\nexport const positionStatus = {\r\n    sidebar: 'sidebar',\r\n    noSidebar: 'noSidebar',\r\n};\r\nexport const viewStatusNames = {\r\n    wideView: 'wideView',\r\n    middleView: 'middleView',\r\n};\r\n// ---- ABOUT PORT ----------------------------------\r\nexport const port_names = {\r\n    _requiring_subtitles: '_port_name_require_subtitles',\r\n    _injected_contentScript: '_port_name_injected_contentScript',\r\n};\r\n// // Usage\r\n// type _order = orderTypes[];\r\n// const oo: _order = [\r\n//   orderNames.sendStatus, orderNames.disconnect\r\n// ];\r\n// console.log(oo);\r\n// const messageHandler = (m: iMessage): void => {\r\n//   const { from, to, order } = m;\r\n//   // もしもorderプロパティが含まれていて、中身があれば\r\n//   if (order && order.length) {\r\n//     console.log(\"there is order\");\r\n//     //\r\n//     // この時点だとorderが何者かわからないみたいだからincludes()メソッドなんて使えないよ\r\n//     // というエラーが出る\r\n//     // でも使えた\r\n//     // codesandboxでは\r\n//     if (order.includes(orderNames.sendStatus)) {\r\n//       console.log(\"SEND STATUS\");\r\n//     }\r\n//     if (order.includes(orderNames.disconnect)) {\r\n//       console.log(\"DISCONNECT\");\r\n//     }\r\n//   }\r\n// };\r\n// messageHandler({\r\n//   from: \"background\",\r\n//   to: \"content script\",\r\n//   order: [\r\n//     orderNames.sendStatus, orderNames.disconnect\r\n//   ]\r\n// });\r\n// messageHandler({\r\n//   from: \"background\",\r\n//   to: \"content script\",\r\n//   order: []\r\n// });\r\n// messageHandler({\r\n//   from: \"background\",\r\n//   to: \"content script\"\r\n// });\r\n/*\r\n## 変数がいくつかの特定の値を持つように強制する方法\r\n\r\nhttps://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types\r\n\r\n```TypeScript\r\n\r\n// -- example 1 --\r\n\r\nlet x: \"hello\" = \"hello\";\r\n// OK\r\nx = \"hello\";\r\n// ...\r\nx = \"howdy\";\r\n// Type '\"howdy\"' is not assignable to type '\"hello\"'.\r\n\r\n// -- example 2 --\r\n\r\nfunction printText(s: string, alignment: \"left\" | \"right\" | \"center\") {\r\n  // ...\r\n}\r\nprintText(\"Hello, world\", \"left\");\r\nprintText(\"G'day, mate\", \"centre\");\r\nArgument of type '\"centre\"' is not assignable to parameter of type '\"left\" | \"right\" | \"center\"'.\r\n```\r\n\r\nhttps://typescript-jp.gitbook.io/deep-dive/type-system/literal-types\r\n\r\n\r\n\r\n*/\r\n","/*************************************************************\r\n * State class\r\n *\r\n *\r\n * ../contentScript/controller.tsなどで使われるためのもの\r\n * ../background/background.tsのためのものと混同しないこと\r\n *\r\n * Observableのインスタンスを必須とする\r\n * ObservableはObserverデザインパターンのsubjectである\r\n * Stateはpublicとしてこのインスタンスを登録し\r\n * あとからobserverを登録できる\r\n * **********************************************************/\r\nclass State {\r\n    constructor(s, o) {\r\n        this.observable = o;\r\n        this._state = Object.assign({}, s);\r\n    }\r\n    setState(prop) {\r\n        const prev = Object.assign({}, this._state);\r\n        // _stateは一段階の深さなので\r\n        // コピーはspread構文で充分\r\n        this._state = Object.assign(Object.assign({}, this._state), prop);\r\n        this.observable.notify(prop, prev);\r\n    }\r\n    getState() {\r\n        // _stateは一段階の深さなので\r\n        // コピーはspread構文で充分\r\n        return Object.assign({}, this._state);\r\n    }\r\n}\r\nexport default State;\r\n","/***************************************************\r\n * SELECTORS\r\n * ________________________________________________\r\n *\r\n *\r\n *\r\n *\r\n * **************************************************/\r\n// --- Selectors related to Transcript ---------------------------\r\nexport const transcript = {\r\n    // HTMLSpanElement which is Highlight as current subtitle on movie.\r\n    highlight: 'span.transcript--highlight-cue--1bEgq',\r\n    // NodeListOf<HTMLSpanElement> which are list of subtitle element.\r\n    transcripts: 'div.transcript--cue-container--wu3UY p.transcript--underline-cue--3osdw span',\r\n    // top element of side bar\r\n    noSidebar: 'div.app--no-sidebar--1naXE',\r\n    sidebar: 'div.has-sidebar',\r\n    // High level element of Movie element\r\n    movieContainer: 'div.app--curriculum-item--2GBGE',\r\n    // Movie Replay button\r\n    replayButton: \"button[data-purpose='video-play-button-initial']\",\r\n    // Controlbar\r\n    controlbar: \"div.control-bar--control-bar--MweER[data-purpose='video-controls']\",\r\n    // \r\n};\r\n// --- Selectors related to control bar. -------------------------\r\nexport const controlBar = {\r\n    // \"closed captioning\"\r\n    cc: {\r\n        // 字幕メニューpopupボタン\r\n        popupButton: \"button[data-purpose='captions-dropdown-button']\",\r\n        // textContentで取得できる言語を取得可能\r\n        //   languageList:\r\n        //     \"button.udlite-btn.udlite-btn-large.udlite-btn-ghost.udlite-text-sm.udlite-block-list-item.udlite-block-list-item-small.udlite-block-list-item-neutral > div.udlite-block-list-item-content\",\r\n        //\r\n        // 言語リストを取得するには一旦languageButtonsを取得してからそれからquerySelectorする\r\n        // いらないかも\r\n        menuCheckButtons: 'button',\r\n        menuList: '.udlite-block-list-item-content',\r\n        menuListParent: \"ul[role='menu'][data-purpose='captions-dropdown-menu']\",\r\n        // 上記のセレクタのラッパーボタン。\r\n        // 属性`aria-checked`で選択されているかどうかわかる\r\n        checkButtons: 'button.udlite-btn.udlite-btn-large.udlite-btn-ghost.udlite-text-sm.udlite-block-list-item.udlite-block-list-item-small.udlite-block-list-item-neutral',\r\n    },\r\n    transcript: {\r\n        toggleButton: \"button[data-purpose='transcript-toggle']\",\r\n    },\r\n    theatre: {\r\n        theatreToggle: \"button[data-purpose='theatre-mode-toggle-button']\"\r\n    }\r\n};\r\n// --- Selectors related ex-transcript -----------------------\r\nexport const EX = {\r\n    // Udemy page-specific selector\r\n    sidebarParent: '.app--content-column--HC_i1',\r\n    noSidebarParent: '.app--dashboard-content--r2Ce9',\r\n    movieContainer: '.app--body-container',\r\n    // 独自selector `ex--`を接頭辞とする\r\n    // sidebar ex-transcript selectors\r\n    sidebarWrapper: '.ex--sidebar-column',\r\n    sidebarSection: '.ex--sidebar--sidebar',\r\n    sidebarHeader: '.ex--sidebar--sidebar-header',\r\n    sidebarContent: '.ex--sidebar--content',\r\n    sidebarContentPanel: '.ex--sidebar-content-panel',\r\n    sidebarFooter: '.ex--sidebar-transcript--autoscroll-wrapper',\r\n    // sidebar width in case more than SIDEBAR_WIDTH_BOUNDARY\r\n    wideView: '.ex--sidebar--wideview',\r\n    // sidebar width in case less than SIDEBAR_WIDTH_BOUNDARY\r\n    middleView: '.ex--sidebar--middleview',\r\n    // bottom ex-transcript selectors\r\n    dashboardTranscriptWrapper: '.ex--dashboard-transcript-wrapper',\r\n    dashboardTranscriptHeader: '.ex--dashboard-transcript--header',\r\n    dashboardTranscriptPanel: '.ex--dashboard-transcript--transcript-panel',\r\n    dashboardTranscriptCueContainer: '.ex--dashboard-transcript--cue-container',\r\n    dashboardTranscriptCue: '.ex--dashboard-transcript--cue--underline',\r\n    dashboardTranscriptCueText: \"span[data-purpose='ex--dashboard-cue-text']\",\r\n    dashboardTranscriptBottom: '.ex--dashboard-transcript--autoscroll-wrapper',\r\n    // To Highlight Transcriot Cue Container\r\n    highlight: '.--highlight--',\r\n};\r\n// --- LEGACY -------------------------\r\n// sectionTitle: 'div.udlite-text-md.video-viewer--title-overlay--OoQ6e',\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n/********************************************************\r\n * controller\r\n * ____________________________________________\r\n *\r\n * 本家Udemy講義ページのトランスクリプト機能と同じものを生成する\r\n * 字幕データだけ、特別に生成された字幕データを取り扱う\r\n *\r\n * 機能：\r\n * - background scriptからの要請に応じてExTranscriptを展開または非表示にする\r\n * - 字幕データはbackground scriptから送信されしだい展開する\r\n * - ExTranscriptの表示の仕方は本家トランスクリプトと同様の動きになるように制御する機能\r\n * - ブラウザの横幅が小さくなりすぎたかどうかもこちらで計算する機能\r\n *  これによりonWindowResizeHandler()の一部が実行されないように制限をかける\r\n *  これはbackground scriptからのorderとonWindowResizeHandler()がバッティングするのを防ぐ\r\n * 　応急処置である\r\n *\r\n *\r\n * 制約：\r\n * - ExTranscriptの表示・非表示はbackground scriptの指示に従う\r\n * - 字幕データはこちらか要求しない\r\n *\r\n * NOTE:\r\n *\r\n * - 自動スクロール機能は要改善である\r\n *\r\n * TODO:\r\n * - ExTranscriptのrerenderingされたら自動スクロール機能消えるのでそれのリセット\r\n * - RESET機能\r\n *  あとはウィンドウが小さくなったりそこから戻ったときの表示非表示の制御\r\n *  実際に表示・非表示の命令はbackground scriptから送信されるorderに従うので\r\n *  こちらはその境界をまたぐ時は何もしないようにすること\r\n *\r\n * - [済] Stateの外部モジュール化\r\n * - [済] 自動スクロール機能の発火条件の発見とそれに伴う修正\r\n * - [済] 字幕データは受動的に取得する仕様にする\r\n * *******************************************************/\r\nimport sidebarTranscriptView from \"./sidebarTranscriptView\";\r\nimport bottomTranscriptView from \"./bottomTranscriptView\";\r\nimport * as selectors from \"../utils/selectors\";\r\nimport { extensionNames, orderNames, RESIZE_BOUNDARY, SIDEBAR_WIDTH_BOUNDARY, RESIZE_TIMER, SIGNAL, positionStatus, viewStatusNames, } from \"../utils/constants\";\r\nimport Observable from \"../utils/Observable\";\r\nimport State from \"../utils/contentScript/State\";\r\nimport MutationObserver_ from \"../utils/MutationObserver_\";\r\nconst statusBase = {\r\n    // position, viewの初期値は意味をなさず、\r\n    // すぐに変更されることが前提である\r\n    position: null,\r\n    view: null,\r\n    highlight: null,\r\n    ExHighlight: null,\r\n    indexList: [],\r\n    isAutoscrollInitialized: false,\r\n    isWindowTooSmall: false,\r\n};\r\nconst subtitleBase = {\r\n    subtitles: [],\r\n};\r\n// ウィンドウが小さすぎてトランスクリプトが表示されなくなる境界値\r\nconst MINIMUM_BOUNDARY = 600;\r\nlet timerQueue = null;\r\nlet sStatus;\r\nlet sSubtitles;\r\nlet transcriptListObserver = null;\r\n//\r\n// --- CHROME LISTENERS -------------------\r\n//\r\n/**\r\n *  Chrome API: On Message Handler\r\n *\r\n * */\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => __awaiter(void 0, void 0, void 0, function* () {\r\n    try {\r\n        if (message.to !== extensionNames.controller)\r\n            return;\r\n        console.log(\"[controller] CONTROLLER GOT MESSAGE\");\r\n        const { order } = message, rest = __rest(message, [\"order\"]);\r\n        if (order && order.length) {\r\n            if (order.includes(orderNames.reset)) {\r\n                console.log(\"[controller] order: RESET\");\r\n                handlerOfReset();\r\n                sendResponse({ complete: true, success: true });\r\n            }\r\n            if (order.includes(orderNames.turnOff)) {\r\n                console.log(\"[controller] order: TURN OFF ExTranscript\");\r\n                handlerOfTurnOff();\r\n                sendResponse({ complete: true, success: true });\r\n            }\r\n        }\r\n        // 字幕データが送られてきたら\r\n        if (rest.subtitles) {\r\n            console.log(\"[controller] [controller] got subtitles\");\r\n            console.log(rest.subtitles);\r\n            //  setStateのnotify()がこの変更に必要な関数を実行してくれる\r\n            sSubtitles.setState({ subtitles: rest.subtitles });\r\n            sendResponse({ complete: true });\r\n        }\r\n        return true;\r\n    }\r\n    catch (err) {\r\n        console.error(err.message);\r\n    }\r\n}));\r\n//\r\n// --- REPLACE & INSERT VIEW METHODS ----------------------------\r\n//\r\nconst renderSidebarTranscript = () => {\r\n    console.log(\"[controller] Rerender sidebar ExTranscript\");\r\n    const { subtitles } = sSubtitles.getState();\r\n    bottomTranscriptView.clear();\r\n    sidebarTranscriptView.clear();\r\n    sidebarTranscriptView.render(subtitles);\r\n    sidebarTranscriptView.updateContentHeight();\r\n    // sidebarの時だけに必要\r\n    window.addEventListener(\"scroll\", onWindowScrollHandler);\r\n};\r\nconst renderBottomTranscript = () => {\r\n    console.log(\"[controller] Rerender bottom ExTranscript\");\r\n    const { subtitles } = sSubtitles.getState();\r\n    sidebarTranscriptView.clear();\r\n    bottomTranscriptView.clear();\r\n    bottomTranscriptView.render(subtitles);\r\n    // noSidebarの時は不要\r\n    window.removeEventListener(\"scroll\", onWindowScrollHandler);\r\n};\r\n//\r\n// --- Handlers ----------------------------------------------\r\n//\r\n/****\r\n *\r\n *\r\n * */\r\nconst reductionOfwindowResizeHandler = () => {\r\n    clearTimeout(timerQueue);\r\n    timerQueue = setTimeout(onWindowResizeHandler, RESIZE_TIMER);\r\n};\r\n/****\r\n *\r\n * */\r\nconst handlerOfTurnOff = () => {\r\n    console.log(\"[controller] handlerOfTurnOff()\");\r\n    // REMOVAL Listeners\r\n    window.removeEventListener(\"resize\", reductionOfwindowResizeHandler);\r\n    window.removeEventListener(\"scroll\", onWindowScrollHandler);\r\n    // CLEAR ExTranscript\r\n    const { position } = sStatus.getState();\r\n    if (position === positionStatus.sidebar) {\r\n        sidebarTranscriptView.clear();\r\n    }\r\n    else {\r\n        bottomTranscriptView.clear();\r\n    }\r\n    // REMOVAL MutationObserver\r\n    transcriptListObserver.disconnect();\r\n    // RESET State\r\n    sStatus.setState(Object.assign({}, statusBase));\r\n    sSubtitles.setState(Object.assign({}, subtitleBase));\r\n};\r\n/****\r\n *\r\n *\r\n * */\r\nconst handlerOfReset = () => {\r\n    console.log(\"[controller] handlerOfReset()\");\r\n    handlerOfTurnOff();\r\n    // NOTE: 以下はMAINの後半の処理と同じである\r\n    const w = document.documentElement.clientWidth;\r\n    const s = w > RESIZE_BOUNDARY ? positionStatus.sidebar : positionStatus.noSidebar;\r\n    sStatus.setState({ position: s });\r\n    if (s === positionStatus.sidebar) {\r\n        sStatus.setState({\r\n            view: w > SIDEBAR_WIDTH_BOUNDARY\r\n                ? viewStatusNames.wideView\r\n                : viewStatusNames.middleView,\r\n        });\r\n    }\r\n    window.addEventListener(\"resize\", reductionOfwindowResizeHandler);\r\n};\r\n/**\r\n * Update ExTranscript View hight while it is sidebar.\r\n *\r\n * */\r\nconst onWindowScrollHandler = () => {\r\n    console.log(\"[controller] onWindowScrollHandler()\");\r\n    const y = window.scrollY;\r\n    y < 56\r\n        ? sidebarTranscriptView.updateContentTop(56 - y)\r\n        : sidebarTranscriptView.updateContentTop(0);\r\n};\r\n/*\r\n    onWindowResizeHandler()\r\n  \r\n  window.onresizeで境界条件を指定する\r\n  \r\n  exTranscriptの配置換え：RESIZE_BOUNDARYをまたいだ時だけ更新する\r\n  updateContentHeight(): position === sidebarが真のときは必ず実行\r\n  \r\n  \r\n  */\r\nconst onWindowResizeHandler = () => {\r\n    console.log(\"[controller] onWindowResizeHandler()\");\r\n    const w = document.documentElement.clientWidth;\r\n    const { position, view, isWindowTooSmall } = sStatus.getState();\r\n    //  MINIMUM_BOUNDARYの境界値をまたいだ時は何もしない\r\n    if (w < MINIMUM_BOUNDARY && !isWindowTooSmall) {\r\n        sStatus.setState({ isWindowTooSmall: true });\r\n        return;\r\n    }\r\n    if (w > MINIMUM_BOUNDARY && isWindowTooSmall) {\r\n        sStatus.setState({ isWindowTooSmall: false });\r\n        return;\r\n    }\r\n    // ブラウザの幅がRESIZE_BOUNDARYを上回るとき\r\n    // Transcriptをsidebarに設置する\r\n    if (w > RESIZE_BOUNDARY && position !== positionStatus.sidebar) {\r\n        sStatus.setState({ position: positionStatus.sidebar });\r\n        sStatus.setState({ view: viewStatusNames.middleView });\r\n        // 同時に、sidebar時のTranscriptの表示方法の変更\r\n        sStatus.setState({\r\n            view: w > SIDEBAR_WIDTH_BOUNDARY\r\n                ? viewStatusNames.wideView\r\n                : viewStatusNames.middleView,\r\n        });\r\n    }\r\n    // ブラウザの幅がRESIZE＿BOUNDARYを下回るとき\r\n    // Transcriptを動画下部に表示する\r\n    if (w < RESIZE_BOUNDARY && position !== positionStatus.noSidebar) {\r\n        sStatus.setState({ position: positionStatus.noSidebar });\r\n    }\r\n    // Transcriptがsidebarの時、\r\n    // 2通りある表示方法を決定する\r\n    if (position === positionStatus.sidebar) {\r\n        sidebarTranscriptView.updateContentHeight();\r\n        if (view === viewStatusNames.middleView && w > SIDEBAR_WIDTH_BOUNDARY) {\r\n            // sidebar widthを300pxから25%へ\r\n            sStatus.setState({ view: viewStatusNames.wideView });\r\n        }\r\n        if (view === viewStatusNames.wideView && w < SIDEBAR_WIDTH_BOUNDARY) {\r\n            // sideba widthを25%から300pxへ\r\n            sStatus.setState({ view: viewStatusNames.middleView });\r\n        }\r\n    }\r\n};\r\n//\r\n// ----- DETECT AUTO SCROLL METHODS -----------------------------\r\n//\r\n/****\r\n * 字幕データのindex番号からなる配列をsStatus.indexListとして更新する\r\n *\r\n * */\r\nconst initializeIndexList = () => {\r\n    const { subtitles } = sSubtitles.getState();\r\n    const indexes = subtitles.map((s) => s.index);\r\n    sStatus.setState({ indexList: indexes });\r\n};\r\n/*\r\n      字幕要素群の中から、引数の要素が何番目にあるのかを探してその順番を返す\r\n  */\r\nconst getElementIndexOfList = (from, lookFor) => {\r\n    console.log(\"[controller] getElementIndexOfList()\");\r\n    var num = 0;\r\n    for (const el of Array.from(from)) {\r\n        if (el === lookFor)\r\n            return num;\r\n        num++;\r\n    }\r\n    // 一致するものがなかった場合\r\n    return -1;\r\n};\r\n/*\r\n      updateHighlistIndexes()\r\n      ____________________________\r\n  \r\n      state._ExHighlightを更新するための関数\r\n      本家のTranscriptのハイライト要素を取得して\r\n      それを基にExTranscriptのハイライトする要素の番号を更新する\r\n  \r\n      updaeExTranscriptHighlight()を呼び出す前に必ず呼び出すこと\r\n  \r\n  \r\n      まずcurrentHighlightが取得できていない\r\n      理由はこのセレクターだと\r\n      動画が再生する前の状態の時(再生画面が動画の真ん中に表示されている状態)はこのセレクタはどの要素にも追加されていないからである\r\n  */\r\nconst updateHighlightIndexes = () => {\r\n    console.log(\"[controller] updateHighlightIndexes()\");\r\n    // １．本家のハイライト要素を取得して、その要素群の中での「順番」を保存する\r\n    const nextHighlight = document.querySelector(selectors.transcript.highlight);\r\n    const list = document.querySelectorAll(selectors.transcript.transcripts);\r\n    const next = getElementIndexOfList(list, nextHighlight);\r\n    sStatus.setState({ highlight: next });\r\n    // 2. 1で取得した「順番」がstate._subtitlesのindexと一致するか比較して、\r\n    // ExTranscriptのハイライト要素の番号を保存する\r\n    const { indexList } = sStatus.getState();\r\n    if (indexList.includes(next)) {\r\n        sStatus.setState({ ExHighlight: next });\r\n    }\r\n    else {\r\n        // 一致するindexがない場合\r\n        // currentHighlightの番号に最も近い、currentHighlightより小さいindexをsetする\r\n        var prev = null;\r\n        for (let i of indexList) {\r\n            if (i > next) {\r\n                sStatus.setState({ ExHighlight: prev });\r\n                break;\r\n            }\r\n            prev = i;\r\n        }\r\n    }\r\n};\r\n/*\r\n  \r\n      updaeExTranscriptHighlight()\r\n      ________________________________________\r\n  \r\n      ExTranscriptの字幕要素のハイライトを更新する\r\n      前回のハイライト要素のハイライトを消し\r\n      次のハイライト要素にハイライトを付ける\r\n  \r\n      どれをハイライトさせるかは`state._ExHighlight`に依存する\r\n  */\r\nconst updateExTranscriptHighlight = () => {\r\n    console.log(\"[controller] updateExTranscriptHighlight()\");\r\n    // 次ハイライトする要素のdata-idの番号\r\n    const { ExHighlight } = sStatus.getState();\r\n    const next = document.querySelector(`${selectors.EX.dashboardTranscriptCueContainer}[data-id=\"${ExHighlight}\"]`);\r\n    // 現在のハイライト要素\r\n    const current = document.querySelector(`${selectors.EX.dashboardTranscriptCueContainer}${selectors.EX.highlight}`);\r\n    if (!current) {\r\n        //   初期化時\r\n        console.log(\"---- INITIALIZE -----\");\r\n        next.classList.add(selectors.EX.highlight.slice(1));\r\n        console.log(next);\r\n    }\r\n    else {\r\n        //   更新時\r\n        const currentIndex = parseInt(current.getAttribute(\"data-id\"));\r\n        // もしも変わらないなら何もしない\r\n        if (currentIndex === ExHighlight) {\r\n            console.log(\"--- NO UPDATE ---\");\r\n            return;\r\n        }\r\n        // 更新ならば、前回のハイライト要素を解除して次の要素をハイライトさせる\r\n        else {\r\n            console.log(\"--- UPDATE ---\");\r\n            current.classList.remove(selectors.EX.highlight.slice(1));\r\n            next.classList.add(selectors.EX.highlight.slice(1));\r\n            console.log(next);\r\n        }\r\n    }\r\n};\r\n/***\r\n *  set detect scroll\r\n *\r\n * Udemyの自動スクロール機能と同じ機能をセットアップする関数\r\n *\r\n * NOTE: Udemyの字幕はまったく同じ字幕要素が2個も3個も生成されている\r\n *\r\n * つまりまったく同じ要素が同時に複数存在する状況が発生してしまっている\r\n * 多分バグだけど、同じ要素が何個も生成されてしまうとリスナが何度も\r\n * 反応してしまう可能性がある\r\n *\r\n * これに伴って\r\n * MutationObserverのMutationRecordも複数ある要素のすべてを記録するので\r\n * 1度だけ行いたい処理を2回以上行わなくてはならない危険性がある\r\n *\r\n *  これを避けるためにisItDoneで処理が既に完了しているのかどうかを\r\n *  確認するようにしている\r\n * ***/\r\nconst setDetectScroll = () => {\r\n    console.log(\"[controller] setup Autro Scroll System\");\r\n    const moConfig = {\r\n        attributes: true,\r\n        childList: false,\r\n        subtree: false,\r\n        attributeOldValue: true,\r\n    };\r\n    const moCallback = function (mr) {\r\n        let guard = false;\r\n        mr.forEach((record) => {\r\n            if (record.type === \"attributes\" &&\r\n                record.attributeName === \"class\" &&\r\n                record.oldValue === \"\" &&\r\n                !guard) {\r\n                console.log(\"OBSERVED\");\r\n                guard = true;\r\n                // this._observer.disconnect();\r\n                // DOM への変更中はdisconnectで無限ループ防止できる ----\r\n                updateHighlightIndexes();\r\n                updateExTranscriptHighlight();\r\n                scrollToHighlight();\r\n                // ------------------------------------------------------\r\n                // this._observer.observe(record.target, this._config);\r\n            }\r\n        });\r\n    };\r\n    // 一旦リセットしてから\r\n    if (transcriptListObserver) {\r\n        transcriptListObserver.disconnect();\r\n        transcriptListObserver = null;\r\n    }\r\n    //   NodeListOf HTMLSpanElement\r\n    const transcriptList = document.querySelectorAll(selectors.transcript.transcripts);\r\n    transcriptListObserver = new MutationObserver_(moCallback, moConfig, transcriptList);\r\n    initializeIndexList();\r\n    transcriptListObserver.observe();\r\n};\r\n/**\r\n *  Scroll to Highlight\r\n * ______________________________\r\n *\r\n * ExTranscriptの自動スクロールを更新内容に反映する\r\n *\r\n * */\r\nconst scrollToHighlight = () => {\r\n    console.log(\"[controller] scrollToHighlight()\");\r\n    // そのたびにいまハイライトしている要素を取得する\r\n    const { ExHighlight } = sStatus.getState();\r\n    const current = document.querySelector(`${selectors.EX.dashboardTranscriptCueContainer}[data-id=\"${ExHighlight}\"]`);\r\n    const panel = document.querySelector(selectors.EX.dashboardTranscriptPanel);\r\n    const panelRect = panel.getBoundingClientRect();\r\n    const currentRect = current.getBoundingClientRect();\r\n    if (currentRect.y > panelRect.y) {\r\n        const distance = currentRect.y - panelRect.y;\r\n        panel.scrollTop = distance + panel.scrollTop;\r\n    }\r\n    else {\r\n        if (currentRect.y > 0) {\r\n            const distance = panelRect.y - currentRect.y;\r\n            panel.scrollTop = panel.scrollTop - distance;\r\n        }\r\n        else {\r\n            const distance = panelRect.y + Math.abs(currentRect.y);\r\n            panel.scrollTop = panel.scrollTop - distance;\r\n        }\r\n    }\r\n};\r\n//\r\n// --- UPDATE METHODS -----------------------------------\r\n//\r\n/**\r\n *  Update subtitles rendering.\r\n *\r\n * 常に受け取った字幕データ通りに再レンダリングさせる\r\n * 同時に、\r\n *\r\n * */\r\nconst updateSubtitle = (prop, prev) => {\r\n    if (prop.subtitles === undefined)\r\n        return;\r\n    // 字幕データのアップデート\r\n    const { position, view, isAutoscrollInitialized } = sStatus.getState();\r\n    if (position === \"sidebar\") {\r\n        renderSidebarTranscript();\r\n        sidebarTranscriptView.updateContentHeight();\r\n        view === \"middleView\"\r\n            ? sidebarTranscriptView.updateWidth(SIGNAL.widthStatus.middleview)\r\n            : sidebarTranscriptView.updateWidth(SIGNAL.widthStatus.wideview);\r\n    }\r\n    if (position === \"noSidebar\") {\r\n        renderBottomTranscript();\r\n    }\r\n    if (!isAutoscrollInitialized) {\r\n        // NOTE: 自動スクロール機能はここで初期化される\r\n        setDetectScroll();\r\n        sStatus.setState({ isAutoscrollInitialized: true });\r\n    }\r\n};\r\nconst updatePosition = (prop, prev) => {\r\n    const { position } = prop;\r\n    if (position === undefined)\r\n        return;\r\n    if (position === \"sidebar\")\r\n        renderSidebarTranscript();\r\n    else if (position === \"noSidebar\")\r\n        renderBottomTranscript();\r\n};\r\nconst updateSidebarView = (prop, prev) => {\r\n    const { view } = prop;\r\n    if (view === undefined)\r\n        return;\r\n    if (view === \"middleView\")\r\n        sidebarTranscriptView.updateWidth(SIGNAL.widthStatus.middleview);\r\n    else if (view === \"wideView\")\r\n        sidebarTranscriptView.updateWidth(SIGNAL.widthStatus.wideview);\r\n};\r\nconst updateHighlight = (prop, prev) => {\r\n    const { highlight } = prop;\r\n    if (highlight === undefined)\r\n        return;\r\n    console.log(\"[controller] UPDATED Highlight\");\r\n};\r\nconst updateExHighlight = (prop, prev) => {\r\n    const { highlight } = prop;\r\n    if (highlight === undefined)\r\n        return;\r\n    console.log(\"[controller] UPDATED ExHighlight\");\r\n};\r\n/**\r\n *  MAIN\r\n *\r\n * */\r\n(function () {\r\n    console.log(\"[controller] Initializing...\");\r\n    const oStatus = new Observable();\r\n    const oSubtitle = new Observable();\r\n    sStatus = new State(statusBase, oStatus);\r\n    sSubtitles = new State(subtitleBase, oSubtitle);\r\n    sSubtitles.observable.register(updateSubtitle);\r\n    sStatus.observable.register(updatePosition);\r\n    sStatus.observable.register(updateSidebarView);\r\n    sStatus.observable.register(updateHighlight);\r\n    sStatus.observable.register(updateExHighlight);\r\n    // 初期のExTranscriptの展開場所に関するステータスを取得する\r\n    const w = document.documentElement.clientWidth;\r\n    const s = w > RESIZE_BOUNDARY ? positionStatus.sidebar : positionStatus.noSidebar;\r\n    sStatus.setState({ position: s });\r\n    if (s === positionStatus.sidebar) {\r\n        sStatus.setState({\r\n            view: w > SIDEBAR_WIDTH_BOUNDARY\r\n                ? viewStatusNames.wideView\r\n                : viewStatusNames.middleView,\r\n        });\r\n    }\r\n    sStatus.setState({ isWindowTooSmall: w < MINIMUM_BOUNDARY ? true : false });\r\n    window.removeEventListener(\"resize\", reductionOfwindowResizeHandler);\r\n    window.addEventListener(\"resize\", reductionOfwindowResizeHandler);\r\n})();\r\n//\r\n// ---- LEGACY ----------------------------------------\r\n//\r\n// const init = async (): Promise<void> => {\r\n//   try {\r\n//     await sendMessagePromise({\r\n//       from: extensionNames.controller,\r\n//       to: extensionNames.background,\r\n//       activated: true,\r\n//     });\r\n//     const temporary = state.loadSubtitles();\r\n//     console.log(temporary);\r\n//     const w: number = document.documentElement.clientWidth;\r\n//     const s: keyof_positionStatus =\r\n//       w > RESIZE_BOUNDARY\r\n//         ? positionStatus.sidebar\r\n//         : positionStatus.noSidebar;\r\n//     state.setState({ position: s });\r\n//     if (s === positionStatus.sidebar) {\r\n//       renderSidebarTranscript();\r\n//       sidebarTranscriptView.updateContentHeight();\r\n//       if (w > SIDEBAR_WIDTH_BOUNDARY) {\r\n//         state.setState({ view: viewStatusNames.wideView });\r\n//         sidebarTranscriptView.updateWidth(SIGNAL.widthStatus.wideview);\r\n//       } else {\r\n//         state.setState({ view: viewStatusNames.middleView });\r\n//         sidebarTranscriptView.updateWidth(SIGNAL.widthStatus.middleview);\r\n//       }\r\n//     } else {\r\n//       renderBottomTranscript();\r\n//     }\r\n//     window.addEventListener(\"resize\", function () {\r\n//       clearTimeout(timerQueue);\r\n//       timerQueue = setTimeout(onWindowResizeHandler, RESIZE_TIMER);\r\n//     });\r\n//     // --- ここまでで初期化完了 ---\r\n//     // ViewにLoading画面を表示させる\r\n//     // subtitlesをViewに表示準備できたら\r\n//     // ViewのLoading画面を終了させる\r\n//   } catch (err) {\r\n//     if (err === chrome.runtime.lastError) {\r\n//       console.error(err.message);\r\n//     } else {\r\n//       console.log(err);\r\n//     }\r\n//   }\r\n// };\r\n//\r\n// init();\r\n// /*\r\n//     movieContainerClickHandler\r\n//     _____________________________________\r\n//     Udemyの講義ページで動画が再生開始したかどうかを判断する\r\n//     これは一時停止かどうかではなく\r\n//     ページのリロード時などに動画の上にリプレイボタンが表示されているかどうかである\r\n//     リプレイボタン要素がなければ再生中という判断である\r\n//     再生が始まったら初めて自動スクロール機能をセットできる\r\n//     ...とおもったらclickイベントでbuttonがなくなったかチェックしようと思ったら\r\n//     clickイベントが終わってからじゃにとbuttonは消去されないので\r\n//     clickイベント中だと確認できない\r\n//     MutationObserverつかうしかない？\r\n// */\r\n// const movieReplayClickHandler = (ev: PointerEvent): void => {\r\n//   console.log(\"[controller] Movie clicked\");\r\n//   const movieContainer: HTMLElement = document.querySelector<HTMLElement>(\r\n//     selectors.movieContainer\r\n//   );\r\n//   movieContainer.removeEventListener(\"click\", movieReplayClickHandler);\r\n//   //   set up auto scroll handling\r\n//   //   initializeDetecting();\r\n//   setDetectScroll();\r\n// };\r\n// /*\r\n//     setDetectScroll()\r\n//     ______________________________________\r\n//     本家のハイライトされている字幕が、\r\n//     自動スクロール機能で移り変わるたびに反応するオブザーバを生成する\r\n//     12/7:\r\n//     欲しいタイミングで発火していないみたい\r\n//     _callbackの内容をMutationRecordを精査することで条件分岐させること\r\n//     まず、Udemyは同じ字幕を2，3回繰り返し生成してしまうみたいで\r\n//     つまりまったく同じ要素が同時に複数存在する状況が発生されてしまっている\r\n//     これに伴って\r\n//     MutationObserverのMutationRecordも複数ある要素のすべてを記録するので\r\n//     1度だけ行いたい処理を2回以上行わなくてはならない危険性がある\r\n//     これを避けるためにisItDoneで処理が既に完了しているのかどうかを確認するようにしている\r\n// */\r\n// const setDetectScroll = (): void => {\r\n//   const _callback = (mr: MutationRecord[]): void => {\r\n//     console.log(\"observed\");\r\n//     var isItDone: boolean = false;\r\n//     mr.forEach((record: MutationRecord) => {\r\n//       if (\r\n//         record.type === \"attributes\" &&\r\n//         record.attributeName === \"class\" &&\r\n//         record.oldValue === \"\" &&\r\n//         !isItDone\r\n//       ) {\r\n//         // oldValueには\"\"の時と、\"ranscript--highlight-cue--1bEgq\"の両方の時がある\r\n//         // \"ranscript--highlight-cue--1bEgq\"をoldValueで受け取るときは\r\n//         // ハイライトのclassをその要素からremoveしたときと考えて\r\n//         // その時は何もしない\r\n//         // 処理は1度だけになるように\r\n//         console.log(\"-- observer executed --\");\r\n//         isItDone = true;\r\n//         updateHighlightIndexes();\r\n//         updateExTranscriptHighlight();\r\n//         scrollToHighlight();\r\n//       }\r\n//     });\r\n//   };\r\n//   const observer: MutationObserver = new MutationObserver(_callback);\r\n//   const config: MutationObserverInit = {\r\n//     attributes: true,\r\n//     childList: false,\r\n//     subtree: false,\r\n//     attributeOldValue: true,\r\n//   };\r\n//   //   NodeListOf HTMLSpanElement\r\n//   const transcriptList: NodeListOf<Element> = document.querySelectorAll(\r\n//     selectors.transcript.transcripts\r\n//   );\r\n//   transcriptList.forEach((ts) => {\r\n//     observer.observe(ts, config);\r\n//   });\r\n// };\r\n//\r\n//     movieContainerClickHandler\r\n//     _____________________________________\r\n//     Udemyの講義ページで動画が再生開始したかどうかを判断する\r\n//     これは一時停止かどうかではなく\r\n//     ページのリロード時などに動画の上にリプレイボタンが表示されているかどうかである\r\n//     リプレイボタン要素がなければ再生中という判断である\r\n//     再生が始まったら初めて自動スクロール機能をセットできる\r\n//     ...とおもったらclickイベントでbuttonがなくなったかチェックしようと思ったら\r\n//     clickイベントが終わってからじゃにとbuttonは消去されないので\r\n//     clickイベント中だと確認できない\r\n//     MutationObserverつかうしかない？\r\n//\r\n// const movieReplayClickHandler = (ev: PointerEvent): void => {\r\n//   console.log(\"[controller] Movie clicked\");\r\n//   const movieContainer: HTMLElement = document.querySelector<HTMLElement>(\r\n//     selectors.transcript.movieContainer\r\n//   );\r\n//   movieContainer.removeEventListener(\"click\", movieReplayClickHandler);\r\n//   //   set up auto scroll handling\r\n//   //   initializeDetecting();\r\n//   setDetectScroll();\r\n"],"names":[],"sourceRoot":""}