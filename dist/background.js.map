{"version":3,"file":"background.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://playground-chromeextension/./src/utils/LocalStorage.ts","webpack://playground-chromeextension/./src/utils/constants.ts","webpack://playground-chromeextension/./src/utils/helpers.ts","webpack://playground-chromeextension/webpack/bootstrap","webpack://playground-chromeextension/webpack/runtime/define property getters","webpack://playground-chromeextension/webpack/runtime/hasOwnProperty shorthand","webpack://playground-chromeextension/webpack/runtime/make namespace object","webpack://playground-chromeextension/./src/background/background.ts"],"sourcesContent":["/*\r\n    chrome.storage.localのclass化\r\n    ___________________________________________\r\n\r\n    NOTE:\r\n        1. インスタンスにつき一つだけlocalStorageへ保存するためのkeyを登録できる\r\n            なので一つのkeyに対するデータだけ保存できる\r\n\r\n        2. ~loadが返すのは{_key: 保存したデータ}であることに注意~\r\n            ~なので保存したデータだけに用がある場合がほ飛んだと思うので~\r\n            ~利用する側はそのまま使ってしまわないように注意~\r\n        load()のreturn する値を変更した\r\n\r\n    \r\n*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport class LocalStorage {\r\n    constructor(_key) {\r\n        this._key = _key;\r\n    }\r\n    _getLocalStorage(_key) {\r\n        return new Promise((resolve, reject) => {\r\n            // chrome.storage.local.get()はPromiseチェーンみたいなもの\r\n            chrome.storage.local.get(_key, (s) => {\r\n                if (chrome.runtime.lastError) {\r\n                    reject(chrome.runtime.lastError);\r\n                }\r\n                resolve(s);\r\n            });\r\n        });\r\n    }\r\n    save(data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const obj = { [this._key]: data };\r\n                yield chrome.storage.local.set(obj);\r\n            }\r\n            catch (err) {\r\n                if (err === chrome.runtime.lastError) {\r\n                    console.error(err.message);\r\n                }\r\n                else {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    load() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                const data = yield this._getLocalStorage(this._key);\r\n                // return data;\r\n                // 保存されたデータだけを返すようにした\r\n                return data[this._key];\r\n            }\r\n            catch (err) {\r\n                if (err === chrome.runtime.lastError) {\r\n                    console.error(err.message);\r\n                }\r\n                else {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    clearAll() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield chrome.storage.local.remove(this._key);\r\n        });\r\n    }\r\n}\r\n// -- USAGE --------------\r\n//\r\n// const ls_sectionTitle = new LocalStorage<string>(\"key_section_title\");\r\n// await ls_sectionTitle.save(someStringdata);\r\n// const data = await ls_sectionTitle.load();\r\n","/**************************************************\r\n * constants\r\n * ________________________________________________\r\n *\r\n * ************************************************/\r\nexport const extensionStatus = {\r\n    working: 'working',\r\n    notWorking: 'notWorking',\r\n    idle: 'idle',\r\n};\r\nexport const extensionNames = {\r\n    popup: 'popup',\r\n    contentScript: 'contentScript',\r\n    controller: 'controller',\r\n    captureSubtitle: \"captureSubtitle\",\r\n    background: 'background',\r\n};\r\n//\r\n// Updated\r\n//\r\nexport const orderNames = {\r\n    // // Inject content script order\r\n    // injectCaptureSubtitleScript: 'injectCaptureSubtitleScript',\r\n    // injectExTranscriptScript: 'injectExTranscriptScript',\r\n    // From background to contentScript\r\n    sendStatus: 'sendStatus',\r\n    // from controller to background\r\n    sendSubtitles: 'sendSubtitles',\r\n    // order to disconnect port\r\n    disconnect: 'disconnect',\r\n    // from popup inquire the url is correct\r\n    inquireUrl: \"inquireUrl\",\r\n    // from popup, run process\r\n    run: \"run\",\r\n    // something succeeded\r\n    success: \"success\"\r\n};\r\n// ---- ABOUT PORT ----------------------------------\r\nexport const port_names = {\r\n    _requiring_subtitles: '_port_name_require_subtitles',\r\n    _injected_contentScript: '_port_name_injected_contentScript',\r\n};\r\n// // Usage\r\n// type _order = orderTypes[];\r\n// const oo: _order = [\r\n//   orderNames.sendStatus, orderNames.disconnect\r\n// ];\r\n// console.log(oo);\r\n// const messageHandler = (m: iMessage): void => {\r\n//   const { from, to, order } = m;\r\n//   // もしもorderプロパティが含まれていて、中身があれば\r\n//   if (order && order.length) {\r\n//     console.log(\"there is order\");\r\n//     // \r\n//     // この時点だとorderが何者かわからないみたいだからincludes()メソッドなんて使えないよ\r\n//     // というエラーが出る\r\n//     // でも使えた\r\n//     // codesandboxでは\r\n//     if (order.includes(orderNames.sendStatus)) {\r\n//       console.log(\"SEND STATUS\");\r\n//     }\r\n//     if (order.includes(orderNames.disconnect)) {\r\n//       console.log(\"DISCONNECT\");\r\n//     }\r\n//   }\r\n// };\r\n// messageHandler({\r\n//   from: \"background\",\r\n//   to: \"content script\",\r\n//   order: [\r\n//     orderNames.sendStatus, orderNames.disconnect\r\n//   ]\r\n// });\r\n// messageHandler({\r\n//   from: \"background\",\r\n//   to: \"content script\",\r\n//   order: []\r\n// });\r\n// messageHandler({\r\n//   from: \"background\",\r\n//   to: \"content script\"\r\n// });\r\n/*\r\n## 変数がいくつかの特定の値を持つように強制する方法\r\n\r\nhttps://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types\r\n\r\n```TypeScript\r\n\r\n// -- example 1 --\r\n\r\nlet x: \"hello\" = \"hello\";\r\n// OK\r\nx = \"hello\";\r\n// ...\r\nx = \"howdy\";\r\n// Type '\"howdy\"' is not assignable to type '\"hello\"'.\r\n\r\n// -- example 2 --\r\n\r\nfunction printText(s: string, alignment: \"left\" | \"right\" | \"center\") {\r\n  // ...\r\n}\r\nprintText(\"Hello, world\", \"left\");\r\nprintText(\"G'day, mate\", \"centre\");\r\nArgument of type '\"centre\"' is not assignable to parameter of type '\"left\" | \"right\" | \"center\"'.\r\n```\r\n\r\nhttps://typescript-jp.gitbook.io/deep-dive/type-system/literal-types\r\n\r\n\r\n\r\n*/\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nexport const deepCopier = (data) => {\r\n    return JSON.parse(JSON.stringify(data));\r\n};\r\nexport const sendMessageToTabsPromise = (tabId, message) => __awaiter(void 0, void 0, void 0, function* () {\r\n    return new Promise((resolve, reject) => __awaiter(void 0, void 0, void 0, function* () {\r\n        chrome.tabs.sendMessage(tabId, message, (response) => __awaiter(void 0, void 0, void 0, function* () {\r\n            const { complete } = response, rest = __rest(response, [\"complete\"]);\r\n            complete\r\n                ? resolve(rest)\r\n                : reject('Send message to tabs went something wrong');\r\n        }));\r\n    }));\r\n});\r\nexport const sendMessagePromise = (message) => __awaiter(void 0, void 0, void 0, function* () {\r\n    return new Promise((resolve, reject) => __awaiter(void 0, void 0, void 0, function* () {\r\n        chrome.runtime.sendMessage(message, (response) => __awaiter(void 0, void 0, void 0, function* () {\r\n            const { complete } = response, rest = __rest(response, [\"complete\"]);\r\n            if (complete)\r\n                resolve(rest);\r\n            else\r\n                reject();\r\n        }));\r\n    }));\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*******************************************************************\r\n * background.ts\r\n * ________________________________________________________________\r\n *\r\n * As service worker and Application Layer.\r\n *\r\n * *****************************************************************/\r\n/**\r\n * 検証：\r\n * グローバルモジュールのmodelは、service workerがアンロードされたあとでも\r\n * 自身のinstanceを保持しているのか？\r\n *\r\n * 結果：\r\n * ぜんぜんアンロードされない\r\n * 10分くらい放っておいても問題ない...\r\n *\r\n * ということで雑だけれどservice workerでもわりとアンロードされないから\r\n * グローバル・モジュールに値を保持させるのはアリとする\r\n *\r\n * */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { orderNames, extensionNames, } from \"../utils/constants\";\r\nimport { deepCopier } from \"../utils/helpers\";\r\nimport { LocalStorage } from \"../utils/LocalStorage\";\r\nchrome.runtime.onInstalled.addListener((details) => {\r\n    console.log(`[background] onInstalled: ${details.reason}`);\r\n    const m = new Model(\"__key__local_storage_\", modelBase);\r\n    console.log(m);\r\n    model.register(m);\r\n});\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    if (message.to !== extensionNames.background)\r\n        return;\r\n    const { order } = message, rest = __rest(message, [\"order\"]);\r\n    if (order && order.length) {\r\n        if (order.includes(orderNames.run)) {\r\n            console.log(\"[background] got run order:\");\r\n            const m = model._();\r\n            m.load().then((res) => console.log(res));\r\n        }\r\n    }\r\n});\r\n// modelBaseは新規プロパティの追加も削除もない\r\nconst modelBase = {\r\n    isContentScriptInjected: false,\r\n    isCaptureSubtitleInjected: false,\r\n    isControllerInjected: false,\r\n    isSubtitleCapturing: false,\r\n    isSubtitleCaptured: false,\r\n    isTranscriptRestructured: false,\r\n    isTranscriptON: false,\r\n    isEnglish: false,\r\n    isWindowTooSmall: false,\r\n    tabId: null,\r\n    url: null,\r\n    subtitles: null,\r\n};\r\nclass Model {\r\n    constructor(key, base) {\r\n        this._storage_key = key;\r\n        this._local_storage = new LocalStorage(this._storage_key);\r\n        this._local_storage.save(base);\r\n    }\r\n    update(prop) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // いちいち毎度すべていったん取得してから、引数に一致するプロパティだけ変更して\r\n            // 変更したすべてを保存する\r\n            // なのでひと手間ある\r\n            let current = yield this._local_storage.load();\r\n            current = Object.assign(Object.assign({}, current), prop);\r\n            yield this._local_storage.save(current);\r\n        });\r\n    }\r\n    load() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const current = yield this._local_storage.load();\r\n            return deepCopier(current);\r\n        });\r\n    }\r\n    clearAll() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._local_storage.clearAll();\r\n        });\r\n    }\r\n}\r\nconst model = (function () {\r\n    let instance = null;\r\n    return {\r\n        register: (m) => {\r\n            instance = m;\r\n        },\r\n        unregister: () => {\r\n            instance = null;\r\n        },\r\n        _: () => {\r\n            return instance;\r\n        },\r\n    };\r\n})();\r\n/*\r\n    stateList module\r\n    ______________________________________________\r\n\r\n    Stateのインスタンスを保存しておく場所\r\n    インスタンスをどこからでも呼出せるようにするためと、\r\n    インスタンスをグローバル変数にしたくないからこんな面倒をしている\r\n\r\n    検証：service workerがアンロードされても_listの中身は消えないのか?\r\n*/\r\nconst stateList = (function () {\r\n    console.log(\"stateList module invoked\");\r\n    // Instances stored in this list.\r\n    const _list = {};\r\n    return {\r\n        register: (name, instance) => {\r\n            _list[name] = instance;\r\n        },\r\n        unregister: (name) => {\r\n            // これでinstanceもさくじょしていることになるかしら\r\n            delete _list[name];\r\n        },\r\n        // nameで指定するんじゃなくて、\r\n        // 型引数で指定できるようにしたいなぁ\r\n        caller: (name) => {\r\n            return _list[name];\r\n        },\r\n        showList: () => {\r\n            console.log(\"stateList::_list:\");\r\n            console.log(_list);\r\n        },\r\n        length: () => {\r\n            return Object.keys(_list).length;\r\n        },\r\n    };\r\n})();\r\n"],"names":[],"sourceRoot":""}